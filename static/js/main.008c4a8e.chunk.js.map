{"version":3,"sources":["helpers/messages.ts","store/app/actions.ts","store/app/reducers.ts","store/reducers.ts","components/basic/Icons/Icon.tsx","components/side/City/City.tsx","components/side/СitiesListPlaceholder/СitiesListPlaceholder.tsx","components/side/CitiesList/CitiesList.tsx","components/side/Tip/Tip.tsx","components/basic/Button/Button.tsx","components/basic/Input/Input.tsx","components/side/CityInput/CityInput.tsx","helpers/cities-validation.ts","components/side/MainPanel/MainPanel.tsx","components/side/TopPanel/TopPanel.tsx","App.tsx","index.tsx"],"names":["MessageType","cityInputTextChange","text","type","payload","setTip","message","initialState","cities","require","resultCities","openedCity","tip","INFO","cityInput","combineReducers","app","state","action","Icon","className","enableBackground","id","version","viewBox","fill","points","stroke","strokeMiterlimit","strokeWidth","xmlns","width","height","d","City","cityNumber","cityName","isOpened","useState","cityInfo","setCityInfo","dispatch","useDispatch","useEffect","wikiURL","fetch","then","response","json","data","_data","query","search","shift","snippet","result","DOMParser","parseFromString","firstChild","onClick","textContent","СitiesListPlaceholder","CitiesList","useSelector","window","scrollTo","document","body","scrollHeight","length","map","city","index","key","Tip","ERROR","Button","children","disabled","Input","value","placeholder","onChange","citiesValidation","EXCEPTIONS","findCity","playerCity","filter","toLowerCase","trim","searchResult","includes","checkAnswer","answer","getAnswer","getTip","lastCity","slice","firstLetter","lastLetter","citiesOptions","getRandomInt","toUpperCase","min","max","Math","floor","random","CityInput","onSubmit","e","preventDefault","setCities","target","MainPanel","TopPanel","App","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.008c4a8e.chunk.js","sourcesContent":["export enum MessageType {\r\n    INFO,\r\n    ERROR\r\n};\r\n\r\nexport interface Message {\r\n    type: MessageType.INFO | MessageType.ERROR;\r\n    text: string;\r\n};\r\n","import IAction from \"../interfaces\";\r\nimport { Message } from \"../../helpers/messages\";\r\n\r\nexport const CITY_INPUT_TEXT_CHANGE = 'CITY_INPUT_TEXT_CHANGE';\r\nexport const SET_CITIES = 'SET_CITIES';\r\nexport const SET_OPENED_CITY = 'SET_OPENED_CITY';\r\nexport const CLEAR_CITIES = 'CLEAR_CITIES';\r\nexport const SET_TIP = 'SET_TIP';\r\n\r\nexport const cityInputTextChange = (text: string): IAction => ({\r\n    type: CITY_INPUT_TEXT_CHANGE,\r\n    payload: text\r\n});\r\n\r\nexport const setCities = (cities: Array<string>): IAction => ({\r\n    type: SET_CITIES,\r\n    payload: cities\r\n});\r\n\r\nexport const setOpenedCity = (key: null | number): IAction => ({\r\n    type: SET_OPENED_CITY,\r\n    payload: key\r\n});\r\n\r\nexport const clearCities = (): IAction => ({\r\n    type: CLEAR_CITIES\r\n});\r\n\r\nexport const setTip = (message: Message): IAction => ({\r\n    type: SET_TIP,\r\n    payload: message\r\n});","import IAction from \"../interfaces\";\r\n\r\nimport { \r\n    CITY_INPUT_TEXT_CHANGE,\r\n    SET_CITIES, SET_TIP,\r\n    CLEAR_CITIES,\r\n    SET_OPENED_CITY\r\n} from \"./actions\";\r\nimport { Message, MessageType } from \"../../helpers/messages\";\r\n\r\ninterface IInitialState {\r\n    cities: Array<object>;\r\n    resultCities: Array<string>;\r\n    openedCity: null | number;\r\n    tip: Message;\r\n    cityInput: string;\r\n}\r\n\r\nconst initialState: IInitialState = {\r\n    cities: require(`../../cities/RU.json`),\r\n    resultCities: [],\r\n    openedCity: null,\r\n    tip: {\r\n        type: MessageType.INFO,\r\n        text: ''\r\n    },\r\n    cityInput: ''\r\n}\r\n\r\nexport const appReducer = (state = initialState, action: IAction) => {\r\n    switch (action.type) {\r\n        case CITY_INPUT_TEXT_CHANGE: {\r\n            return {\r\n                ...state,\r\n                cityInput: action.payload\r\n            }\r\n        }\r\n        case SET_CITIES: {\r\n            return {\r\n                ...state,\r\n                resultCities: [...action.payload]\r\n            }\r\n        }\r\n        case CLEAR_CITIES: {\r\n            return {\r\n                ...state,\r\n                resultCities: [],\r\n                openedCity: null\r\n            }\r\n        }\r\n        case SET_OPENED_CITY: {\r\n            return {\r\n                ...state,\r\n                openedCity: action.payload\r\n            }\r\n        }\r\n        case SET_TIP: {\r\n            return {\r\n                ...state,\r\n                tip: action.payload\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\n\r\nimport { appReducer } from \"./app/reducers\";\r\n\r\nexport default combineReducers({\r\n    app: appReducer\r\n});","import React from 'react';\r\n\r\nimport './Icon.css';\r\n\r\ninterface IIcon {\r\n    type: \"collapse\" | \"done\" | \"restart\";\r\n}\r\n\r\nconst Icon: React.FC<IIcon> = ({ type }) => <>\r\n    {\r\n        type === \"collapse\" && <span className=\"collapce-icon\">\r\n            <svg\r\n                enableBackground=\"new 0 0 24 24\"\r\n                id=\"Layer_1\"\r\n                version=\"1.0\"\r\n                viewBox=\"0 0 24 24\"\r\n            >\r\n                <polyline\r\n                    fill=\"none\"\r\n                    points=\"3,15.5 12,6.5 21,15.5\"\r\n                    stroke=\"#000000\"\r\n                    strokeMiterlimit=\"10\"\r\n                    strokeWidth=\"2\"\r\n                />\r\n            </svg>\r\n        </span>\r\n    }\r\n    {\r\n        type === \"done\" && <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n        >\r\n            <path\r\n                fill=\"none\"\r\n                d=\"M0 0h24v24H0z\"\r\n            />\r\n            <path\r\n                d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\r\n            />\r\n        </svg>\r\n    }\r\n    {\r\n        type === \"restart\" && <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"24\"\r\n            height=\"24\"\r\n            viewBox=\"0 0 24 24\"\r\n        >\r\n            <path\r\n                d=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c\r\n                -.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\r\n            />\r\n            <path\r\n                d=\"M0 0h24v24H0z\"\r\n                fill=\"none\"\r\n            />\r\n        </svg>\r\n    }\r\n</>\r\n\r\nexport default Icon;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setOpenedCity } from '../../../store/app/actions';\r\n\r\nimport Icon from '../../basic/Icons/Icon';\r\n\r\nimport './City.css';\r\n\r\ninterface ICity {\r\n\tcityNumber: number;\r\n\tcityName: string;\r\n\tisOpened: boolean;\r\n}\r\n\r\nconst City: React.FC<ICity> = ({ cityNumber, cityName, isOpened }) => {\r\n\tconst [cityInfo, setCityInfo] = useState();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleCollapseClick = () =>  dispatch(setOpenedCity(isOpened === true ? null : cityNumber));\r\n\r\n\tuseEffect(() => {\r\n\t\tconst wikiURL = `https://ru.wikipedia.org/w/api.php?action=query&list=search&prop=info&inprop=url&utf8=&format=json&origin=*&srlimit=20&srsearch=${cityName}`;\r\n\t\tfetch(wikiURL)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst _data = `<span>${data.query.search.shift().snippet}</span>`;\r\n\t\t\t\tconst result = new DOMParser().parseFromString(_data, \"text/xml\").firstChild;\r\n\r\n\t\t\t\tsetCityInfo(result);\r\n\t\t\t});\r\n\t}, [cityName])\r\n\r\n\treturn <article className={`city-item ${isOpened && 'city-item__expanded'}`}>\r\n\t\t<section className=\"city-item__top-panel\">\r\n\t\t\t<span className=\"city-item__city-name\">\r\n\t\t\t\t{`${cityNumber}. ${cityName}`}\r\n\t\t\t</span>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"city-item__open-info-button\"\r\n\t\t\t\tonClick={handleCollapseClick}\r\n\t\t\t>\r\n\t\t\t\t<Icon type=\"collapse\"/>\r\n\t\t\t</button>\r\n\t\t</section>\r\n\t\t{\r\n\t\t\t(isOpened && cityInfo) && <section className=\"city-item__info-panel\">\r\n\t\t\t\t{\r\n\t\t\t\t\t`${cityInfo.textContent}...`\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t}\r\n\t</article>;\r\n}\r\n\r\nexport default City;\r\n","import React from 'react';\r\n\r\nimport './СitiesListPlaceholder.css';\r\n\r\nconst СitiesListPlaceholder: React.FC = () => <section className=\"cities-list__placeholder\">\r\n    <section className=\"cities-list__placeholder__header\">\r\n        <h2>Список городов пуст.</h2>\r\n    </section>\r\n    <section className=\"cities-list__placeholder__secondary-info\">\r\n        <h3>Введите в поле любой существующий город России, чтобы начать игру.</h3>\r\n    </section>\r\n</section>\r\n\r\nexport default СitiesListPlaceholder;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport City from '../City/City';\r\nimport CitiesListPlaceholder from '../СitiesListPlaceholder/СitiesListPlaceholder';\r\n\r\nimport './CitiesList.css';\r\n\r\nconst CitiesList: React.FC = () => {\r\n\tconst resultCities: Array<string> = useSelector((state: any) => state.app.resultCities);\r\n\tconst openedCity: null | number = useSelector((state: any) => state.app.openedCity);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, document.body.scrollHeight);\r\n\t}, [resultCities]);\r\n\r\n\treturn <>\r\n\t\t{\r\n\t\t\tresultCities.length ? <ul className=\"cities-list\">\r\n\t\t\t{\r\n\t\t\t\tresultCities.map((city, index) => <City\r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tcityNumber={index + 1}\r\n\t\t\t\t\tcityName={city}\r\n\t\t\t\t\tisOpened={!!(openedCity === index + 1)}\r\n\t\t\t\t/>)\r\n\t\t\t}\r\n\t\t\t</ul> : <CitiesListPlaceholder/>\r\n\t\t}\r\n\t</>\r\n}\r\n\r\nexport default CitiesList;\r\n","import React from 'react';\r\nimport { Message, MessageType } from '../../../helpers/messages';\r\n\r\nimport './Tip.css';\r\n\r\ninterface ITip {\r\n    message: Message;\r\n}\r\n\r\nconst Tip: React.FC<ITip> = ({ message }) => {\r\n    const { type, text } = message;\r\n    const className = `tip-text ${(type === MessageType.ERROR && 'error-type')}`;\r\n\r\n    return <h1 className={className}>\r\n        {text}\r\n    </h1>\r\n}\r\n\r\nexport default Tip;\r\n","import React from 'react';\r\n\r\nimport './Button.css';\r\n\r\ntype ButtonProps = {\r\n    children?: any;\r\n    type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n    disabled?: boolean;\r\n    onClick?:  any;\r\n}\r\n  \r\nconst Button: React.FC<ButtonProps> = ({children, type, disabled, onClick}) => <button\r\n    className=\"simple-button\"\r\n    type={type}\r\n    disabled={disabled}\r\n    onClick={onClick}\r\n>{children}</button>\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Input.css';\r\n\r\ntype InputProps = {\r\n    value?: string;\r\n    placeholder?: string;\r\n    disabled?: boolean;\r\n    onChange?: any;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ value, placeholder, disabled, onChange }) => <input\r\n    className=\"simple-input\"\r\n    type=\"text\"\r\n    value={value}\r\n    placeholder={placeholder}\r\n    disabled={disabled}\r\n    onChange={onChange}\r\n/>\r\n\r\nexport default Input;\r\n","import React, { FormEvent } from 'react';\r\n\r\nimport CitiesValidation from '../../../helpers/cities-validation';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { cityInputTextChange, setCities, setTip, clearCities } from '../../../store/app/actions';\r\n\r\nimport Button from '../../basic/Button/Button';\r\nimport Icon from '../../basic/Icons/Icon';\r\n\r\nimport './CityInput.css';\r\nimport Input from '../../basic/Input/Input';\r\nimport { MessageType, Message } from '../../../helpers/messages';\r\n\r\nconst citiesValidation = new CitiesValidation();\r\n\r\nconst CityInput: React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { cityInput, cities, resultCities } = useSelector((state: any) => state.app);\r\n\r\n\tconst handleSubmit = (e: FormEvent) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst playerCity = cityInput;\r\n\t\tif (playerCity === '') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst result: any = citiesValidation.findCity(playerCity, cities, resultCities);\r\n\t\tconst isSuccessCity: boolean = result.message.type === MessageType.INFO;\r\n\r\n\t\tif (isSuccessCity) {\r\n\t\t\tconst { resultCities, message } = result;\r\n\t\t\tdispatch(setCities(resultCities));\r\n\t\t\tdispatch(setTip(message));\r\n\t\t} else {\r\n\t\t\tconst { message } = result;\r\n\t\t\tdispatch(setTip(message));\r\n\t\t}\r\n\r\n\t\tdispatch(cityInputTextChange(''));\r\n\t}\r\n\r\n\tconst handleRestartClick = (): void => {\r\n\t\tconst message: Message = {\r\n\t\t\ttype: MessageType.INFO,\r\n\t\t\ttext: ''\r\n\t\t}\r\n\r\n\t\tdispatch(setTip(message));\r\n\t\tdispatch(clearCities());\r\n\t};\r\n\r\n\tconst handleTextChange = ({ target }: any) => dispatch(cityInputTextChange(target.value));\r\n\r\n\treturn (\r\n\t\t<form\r\n\t\t\tclassName=\"city-input-container\"\r\n\t\t\tonSubmit={handleSubmit}\r\n\t\t>\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdisabled={!resultCities.length}\r\n\t\t\t\tonClick={handleRestartClick}\r\n\t\t\t>\r\n\t\t\t\t<Icon type=\"restart\" />\r\n\t\t\t</Button>\r\n\t\t\t<Input\r\n\t\t\t\tvalue={cityInput}\r\n\t\t\t\tplaceholder={\"Введите свой город здесь...\"}\r\n\t\t\t\tonChange={handleTextChange}\r\n\t\t\t/>\r\n\t\t\t<Button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tdisabled={!cityInput}\r\n\t\t\t>\r\n\t\t\t\t<Icon type=\"done\" />\r\n\t\t\t</Button>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default CityInput;\r\n","import { Message, MessageType } from \"./messages\";\r\n\r\nexport interface foundCities {\r\n    resultCities: Array<string>;\r\n    message: Message;\r\n}\r\n\r\ninterface invalidResult {\r\n    message: Message;\r\n}\r\n\r\nexport default class CitiesValidation {\r\n    EXCEPTIONS: Array<string> = [\r\n        'й', 'ь', 'ы', 'ъ'\r\n    ]\r\n\r\n    findCity = (playerCity: string, cities: Array<object>, resultCities: Array<string>): foundCities | invalidResult => {\r\n        const [searchResult] = cities.filter(({ city }: any) => {\r\n            return city.toLowerCase().trim() === playerCity.toLowerCase().trim();\r\n        });\r\n\r\n        if (!searchResult) {\r\n            return {\r\n                message: {\r\n                    type: MessageType.ERROR,\r\n                    text: \"Такого города не было найдено!\"\r\n                }\r\n            };\r\n        }\r\n\r\n        const { city }: any = searchResult;\r\n\r\n        if (resultCities.includes(city)) {\r\n            return {\r\n                message: {\r\n                    type: MessageType.ERROR,\r\n                    text: \"Такой город был уже угадан!\"\r\n                }\r\n            };\r\n        }\r\n\r\n        if (resultCities.length) {\r\n            if (!this.checkAnswer(city, resultCities)) {\r\n                return {\r\n                    message: {\r\n                        type: MessageType.ERROR,\r\n                        text: \"Необходимо загадывать город начиная с указанной буквы!\"\r\n                    }\r\n                };\r\n            }\r\n        }\r\n\r\n        const answer = this.getAnswer(city, cities, resultCities);\r\n\r\n        const foundCities: foundCities = {\r\n            resultCities: [\r\n                ...resultCities,\r\n                city,\r\n                answer\r\n            ],\r\n            message: {\r\n                type: MessageType.INFO,\r\n                text: this.getTip(answer)\r\n            }\r\n        }\r\n\r\n        return foundCities;\r\n    }\r\n\r\n    checkAnswer = (city: string, resultCities: Array<string>): boolean => {\r\n        const lastCity = `${resultCities.slice(-1)}`;\r\n\r\n        const shift = (this.EXCEPTIONS.includes(`${lastCity.slice(-1)}`)) ? 2 : 1;\r\n\r\n        const [firstLetter] = city.toLowerCase();\r\n        const [lastLetter] = lastCity.slice(-shift).toLowerCase();\r\n\r\n        return firstLetter === lastLetter;\r\n    }\r\n\r\n    getAnswer = (city: string, cities: Array<any>, resultCities: Array<string>) => {\r\n        const shift = (this.EXCEPTIONS.includes(`${city.slice(-1)}`)) ? 2 : 1;\r\n        const [lastLetter] = city.slice(-shift).toLowerCase();\r\n\r\n        const citiesOptions: Array<object> = cities.filter(({ city }: any) => {\r\n            const [firstLetter] = city.toLowerCase();\r\n            \r\n            return firstLetter === lastLetter;\r\n        });\r\n\r\n        while (true) {\r\n            const answer: any = citiesOptions[this.getRandomInt(0, citiesOptions.length)];\r\n            if (!resultCities.includes(answer)) {\r\n                return answer.city;\r\n            }\r\n        }\r\n    }\r\n\r\n    getTip = (city: string) => {\r\n        const shift = (this.EXCEPTIONS.includes(`${city.slice(-1)}`)) ? 2 : 1;\r\n        return city[city.length - shift].toUpperCase();\r\n    }\r\n\r\n    getRandomInt = (min: number, max: number) => {\r\n        return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport CitiesList from '../CitiesList/CitiesList';\r\nimport Tip from '../Tip/Tip';\r\nimport CityInput from '../CityInput/CityInput';\r\n\r\nimport './MainPanel.css';\r\n\r\nconst MainPanel: React.FC = () => {\r\n    const { tip } = useSelector((state: any) => state.app); \r\n\r\n    return <main className=\"main-panel\">\r\n        {/* HELP BUTTON */}\r\n        <CitiesList />\r\n        {\r\n            tip && <Tip message={tip}/>\r\n        }\r\n        <CityInput />\r\n    </main>;\r\n}\r\n\r\nexport default MainPanel;\r\n","import React from 'react';\r\n\r\nimport './TopPanel.css';\r\n\r\nconst TopPanel: React.FC = () => <nav className=\"top-panel\">\r\n    <header className=\"top-panel__project-name\">Cities</header>\r\n</nav>\r\n\r\nexport default TopPanel;\r\n","import React from 'react';\r\n\r\nimport MainPanel from './components/side/MainPanel/MainPanel';\r\nimport TopPanel from './components/side/TopPanel/TopPanel';\r\n\r\nimport './App.css'\r\n\r\nconst App: React.FC = () => <>\r\n\t<TopPanel/>\r\n\t<MainPanel/>\r\n</>\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { Provider } from 'react-redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './store/reducers';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\tcomposeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App />\r\n\t</Provider>, document.getElementById('root')\r\n);"],"sourceRoot":""}